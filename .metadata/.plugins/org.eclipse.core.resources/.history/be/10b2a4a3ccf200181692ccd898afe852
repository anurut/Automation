package utils;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Properties;

import org.openqa.selenium.net.Urls;
import org.openqa.selenium.remote.DesiredCapabilities;

import io.appium.java_client.AppiumDriver;
import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.remote.MobileCapabilityType;

public class CommonUtils {


	//Define Capabilities variables here

	public static int EXPLICIT_WAIT;
	public static int DEFAULT_WAIT;
	public static int IMPLICIT_WAIT;
	public static String APPLICATION_APP; //APK PATH
	public static String BASE_PACKAGE;
	public static int APPIUM_SERVER_PORT;
	public static String APPLICATION_ACTIVITY;
	public static String AUTOMATION_INSTRUMENTATION;
	public static String BROWSER_NAME;
	public static String PLATFORM_NAME;
	public static String DEVICE_NAME;
	public static String PLATFORM_VERSION;
	public static int COMMAND_TIMEOUT;
	public static int DEVICE_TIMEOUT;
	//public static String UDID;
	public static Urls serverURL;
	private static AndroidDriver driver;
	private static Properties prop = new Properties();
	public static DesiredCapabilities capability = new DesiredCapabilities();


	public static void loadAndroidprop(String propertyFileName) throws IOException {

		//get property file from test/resources/properties
		FileInputStream fis = new FileInputStream(System.getProperty("user.dir")+"/scr/test/resources/properties/"+ propertyFileName);
		prop.load(fis);
		
		EXPLICIT_WAIT = Integer.parseInt(prop.getProperty("explicit.wait"));
		DEFAULT_WAIT = Integer.parseInt(prop.getProperty("default.wait"));
		IMPLICIT_WAIT = Integer.parseInt(prop.getProperty("implicit.wait"));
		APPLICATION_APP = prop.getProperty("application.path");
		BASE_PACKAGE = prop.getProperty("base.pkg");
		APPIUM_SERVER_PORT = Integer.parseInt(prop.getProperty("appium.server.port"));
		APPLICATION_ACTIVITY = prop.getProperty("application.activity");
		AUTOMATION_INSTRUMENTATION = prop.getProperty("automation.instumentation");
		BROWSER_NAME = prop.getProperty("browser.name");
		PLATFORM_NAME = prop.getProperty("platform.name");
		DEVICE_NAME = prop.getProperty("device.name");
		PLATFORM_VERSION = prop.getProperty("platform.version");
		
		
	}

	public static void setAndroidCapabilities() {

		capability.setCapability(MobileCapabilityType.BROWSER_NAME, value);

	}

	public static AppiumDriver getAndroidDriver() {



	}

}
